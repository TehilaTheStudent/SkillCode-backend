name: CI Pipeline

on:
  push:
    branches:
      - main
      - image-builder

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      PROJECT_ROOT: ${{ github.workspace }}
      CLUSTER_NAME: my-cluster

    steps:
      # Step: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step: Install Docker Compose
      # - name: Install Docker Compose
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y docker-compose

      # Step: Install Kind
      # - name: Install Kind
      #   run: |
      #     curl -Lo ./kind https://kind.sigs.k8s.io/dl/latest/kind-linux-amd64
      #     chmod +x ./kind
      #     sudo mv ./kind /usr/local/bin/

      # Step: Install kubectl
      # - name: Install kubectl
      #   run: |
      #     curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      #     chmod +x ./kubectl
      #     sudo mv ./kubectl /usr/local/bin/

      # # Step: Create Kind Cluster
      # - name: Create Kind Cluster
      #   run: kind create cluster --name ${{ env.CLUSTER_NAME }}

      # Step: Run Unit Tests
      # - name: Run Unit Tests
      #   run: |
      #     sudo apt-get install -y netcat
      #     go mod tidy
      #     go test ./internal/... -v

      # # Step: Delete Kind Cluster
      # - name: Delete Kind Cluster
      #   if: always()
      #   run: kind delete cluster --name ${{ env.CLUSTER_NAME }}

      # Step: Build Docker Image
      - name: Build Docker Image
        if: success()
        run: docker build -t tehilathestudent/skillcode-backend:latest .
      # Step: Build Docker Image for Custom Python
      - name: Build Custom Python Docker Image
        if: success()
        run: |
          docker build \
            -t tehilathestudent/skillcode-custom-python:latest \
            -f template-assets/python/Dockerfile \
            template-assets/

      # Step: Build Docker Image for Custom JavaScript
      - name: Build Custom JavaScript Docker Image
        if: success()
        run: |
          docker build \
            -t tehilathestudent/skillcode-custom-javascript:latest \
            -f template-assets/javascript/Dockerfile \
            template-assets/
      # Step: Log in to Docker Hub
      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # Step: Push Docker Image
      - name: Push Docker Image
        if: success()
        run: docker push tehilathestudent/skillcode-backend:latest
      # Step: Push Custom Python Docker Image
      - name: Push Custom Python Docker Image
        if: success()
        run: docker push tehilathestudent/skillcode-custom-python:latest

      # Step: Push Custom JavaScript Docker Image
      - name: Push Custom JavaScript Docker Image
        if: success()
        run: docker push tehilathestudent/skillcode-custom-javascript:latest
      # Step: Run Integration Tests
      # - name: Run Integration Tests
      #   if: success()
      #   run: |
      #     docker-compose -f docker-compose.yaml up -d mongo
      #     go test ./tests/integration -v
      #     docker-compose down

      # Step: Run E2E Tests
      # - name: Run E2E Tests
      #   if: success()
      #   run: |
      #     docker-compose -f docker-compose.test.yaml up --abort-on-container-exit
